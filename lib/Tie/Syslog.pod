# vim: se tw=80 ts=4 et:

=head1 NAME

Tie::Syslog - Tie a filehandle to Syslog.


=head1 VERSION

2.00_08


=head1 SYNOPSIS

    use Tie::Syslog;

    $Tie::Syslog::ident  = "my logging tag";
    $Tie::Syslog::logopt = "pid,ndelay';

    # Tie STDOUT to Syslog, so that every print()ed message will be logged
    tie *STDOUT, 'Tie::Syslog', {
        logopt   => 'pid,ndelay',
        facility => 'LOG_LOCAL0',
        priority => 'LOG_INFO',
    };

    # Now tie STDERR also, getting parameters from the tied STDOUT
    tie *STDERR, { tied *STDOUT };

    # ...or...

    # tie STDERR with defaults from tied STDOUT, but override priority:
    tie *STDERR, { tied *STDOUT }, {
        priority => 'LOG_ERR',
    }

    ###### 
    # Compatibility with old configuration style:

    tie *STDOUT, 'Tie::Syslog', 
        'local0.error',         # facility.loglevel
        'myname',               # identity 
        'pid',                  # Other Sys::Syslog options, comma-separated
        'ndelay';

    # Tying by copying from another tied handle is not supported in 
    # old-compatibility-mode

=head1 DESCRIPTION

This module lets you tie a filehandle to Sys::Syslog, providing an easy way to
recirect messages to system logs. 


    $Tie::Syslog::ident  = 'DEBUG :: myprocess';
    $Tie::Syslog::logopt = 'pid,ndelay';

    tie *DEBUG, 'Tie::Syslog', {
        facility => 'LOG_LOCAL0',
        priority => 'LOG_DEBUG',
    };

    print DEBUG "This is a debug message - won't probably get to system logs.";

By tying STDOUT and/or STDERR you can easily redirect all messages to system
logs, including those of warn() and die(). 

Tipically, you'll want to tie STDOUT with a lower priority than STDERR. 


=head1 OPTIONS

=head2 $Tie::Syslog::ident

Identity set for logging. B<< This is a global option >>, and will be valid
from the moment you set it onward. The default value is the last field of $0
split on '/'. 

=head2 $Tie::Syslog::logopt

Logging options. These are standard L<< Sys::Syslog >> logopts. See  L<<
Sys::Syslog >> man page for details. 

=head2 facility

One of the default Sys::Syslog facilities available on your system. See L<<
Sys::Syslog >> man page for details. You can have different facilities for
different filehandles.

You can redefine a the facility for a given filehandle on the fly: 

    my $fho = tied *MYFH;
    $fho->facility('LOG_MAIL');


=head2 priority

One of the default Sys::Syslog priorities available on your system. See L<<
Sys::Syslog >> man page for details. You can have different priorities for
different filehandles. 

You can redefine the priority for a given filehandle on the fly: 

    my $fho = tied *MYFH;
    $fho->priority('LOG_CRIT');


=head1 CAVEATS

=over 4

=item * B<< We do not call closelog() >>

In general, openlog() is called automatically whenever syslog() is called on a
new facility/priority pair (although we call it explicitly on tie()). Since
closelog() would work just once and on the last opened connetion to syslog, it
could close a connection completely unrelated to the filehandle currently being
closed/untied/destroyed. So we don't call it at all. 

=item * C<< ident >> and/or C<< logopt >> should be set once, before tying
handles.

If change these variables after tying handles, the behavior is undetermined. At
best, nothing should change; or settings could change if another openlog()
is called afterwards, but don't rely on this. Also, if settings change, they
will affect all tied filehandles. Set them once at the beginning. 

=item * Old method C<< ExtendedSTDERR() >> is no-op by default. 

It is still supported for backward compatibility, but warn() and die() print by
default to STDERR so there should be no need to change them directly. 


=back 


=head1 SEE ALSO

Log priorities, facilities and valid values for C<< logopt >> are listed in 
L<< Sys::Syslog >> man page. 


=head1 AUTHOR

Broc Seib, C<< bseib at purdue.edu >>

Giacomo Montagner, C<< <kromg at entirelyunlike.net> >> 


=head1 BUGS

Please report any bugs or feature requests to C<bug-tie-syslog at rt.cpan.org>, or through
the web interface at L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Tie-Syslog>.  
We'will be notified, and then you'll
automatically be notified of progress on your bug as I make changes.




=head1 SUPPORT

You can find documentation for this module with the perldoc command.

    perldoc Tie::Syslog


You can also look for information at:

=over 4

=item * RT: CPAN's request tracker (report bugs here)

L<http://rt.cpan.org/NoAuth/Bugs.html?Dist=Tie-Syslog>

=item * AnnoCPAN: Annotated CPAN documentation

L<http://annocpan.org/dist/Tie-Syslog>

=item * CPAN Ratings

L<http://cpanratings.perl.org/d/Tie-Syslog>

=item * Search CPAN

L<http://search.cpan.org/dist/Tie-Syslog/>

=back


=head1 ACKNOWLEDGEMENTS


=head1 LICENSE AND COPYRIGHT

Copyright (C) 1999-2001 Broc Seib
Copyright (C) 2012 Giacomo Montagner.

This program is free software; you can redistribute it and/or modify it
under the terms of either: the GNU General Public License as published
by the Free Software Foundation; or the Artistic License.

See http://dev.perl.org/licenses/ for more information.


=cut


